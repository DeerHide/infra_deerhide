---
# code: language=ansible
# Path: ansible/roles/deerhide_users/tasks/generate_host_pgp.yml

- name: Ensure .gnupg exists
  ansible.builtin.file:
    path: "{{ deerhide_operator_home }}/.gnupg"
    state: directory
    mode: "0700"
    owner: deerhide-operator
    group: "{{ gpg_group | default(omit) }}"
  become: true

- name: Deploy gpg.conf
  ansible.builtin.template:
    src: "templates/gpg.conf.j2"
    dest: "{{ deerhide_operator_home }}/.gnupg/gpg.conf"
    mode: "0600"
    owner: deerhide-operator
    group: "{{ gpg_group | default(omit) }}"
  become: true

- name: Deploy gpg-agent.conf
  ansible.builtin.template:
    src: "templates/gpg-agent.conf.j2"
    dest: "{{ deerhide_operator_home }}/.gnupg/gpg-agent.conf"
    mode: "0600"
    owner: deerhide-operator
    group: "{{ gpg_group | default(omit) }}"
  become: true

- name: Deploy gen-key-script
  ansible.builtin.template:
    src: "templates/gen-key-script.j2"
    dest: "/opt/operator/gen-key-script"
    mode: "0600"
    owner: deerhide-operator
    group: "{{ gpg_group | default(omit) }}"
  become: true

- name: Start gpg-agent with correct configuration
  ansible.builtin.shell:
    cmd: |
      export GNUPGHOME="{{ deerhide_operator_home }}/.gnupg"
      pkill -u $(whoami) gpg-agent || true
      sleep 2
      gpg-agent --daemon --allow-loopback-pinentry --pinentry-program /usr/bin/pinentry-curses
  become: true
  become_user: deerhide-operator
  register: gpg_agent_result
  failed_when: >
    gpg_agent_result.rc != 0 and
    ('gpg-agent: a gpg-agent is already running - not starting a new one' not in gpg_agent_result.stderr)
  changed_when: false

- name: Generate the host PGP key # noqa: command-instead-of-shell
  ansible.builtin.shell:
    executable: "/bin/bash"
    cmd: |
      set -eo pipefail
      export GNUPGHOME="{{ deerhide_operator_home }}/.gnupg"
      export GPG_TTY=$(tty 2>/dev/null || echo /dev/console)
      echo {{ host_gpg_passphrase }} | gpg --batch --passphrase-fd 0 --gen-key /opt/operator/gen-key-script
  args:
    creates: "/opt/operator/host-gpg"
  register: host_gpg_key
  changed_when: host_gpg_key.rc == 0

- name: Expose in /opt/operator the host PGP key
  ansible.builtin.shell:
    executable: "/bin/bash"
    cmd: "gpg --armor --export {{ ansible_hostname }}@deerhide.run > /opt/operator/host-gpg"
  args:
    creates: "/opt/operator/host-gpg"
  register: host_gpg_key
  changed_when: host_gpg_key.rc == 0
