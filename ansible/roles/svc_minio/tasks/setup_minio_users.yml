---
# code: language=ansible
# Path: ansible/roles/svc_minio/tasks/setup_minio_users.yml
# This file contains the tasks to create deerhide-operator users for Minio

- name: Check MinIO users list for {{ ansible_hostname }}
  ansible.builtin.shell:
    cmd: |
      set -eo pipefail
      /usr/local/bin/mc admin user list {{ ansible_hostname }} --json | jq -s .
    executable: /bin/bash
  become: true
  become_user: deerhide-operator
  changed_when: false
  register: minio_users_list

- name: Set fact and generate password
  ansible.builtin.set_fact:
    svc_minio_users:
      - {
        name: "mirage",
        gpg_userid: "{{ deerhide_gpg_userid_mirage }}",
        userid: "{{ slack_mirage }}",
        present: "{{ minio_users_list.stdout | from_json | community.general.json_query(check_mirage) | bool }}",
        password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=15) }}",
      } # noqa: jinja[invalid]
      - {
        name: "nakou",
        gpg_userid: "{{ deerhide_gpg_userid_nakou }}",
        userid: "{{ slack_nakou }}",
        present: "{{ minio_users_list.stdout | from_json | community.general.json_query(check_nakou) | bool }}",
        password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=15) }}",
      } # noqa: jinja[invalid]
      - {
        name: "tom",
        gpg_userid: "{{ deerhide_gpg_userid_tom }}",
        userid: "{{ slack_tom }}",
        present: "{{ minio_users_list.stdout | from_json | community.general.json_query(check_tom) | bool }}",
        password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=15) }}",
      } # noqa: jinja[invalid]
  vars:
    check_mirage: "[?status==`success`] | contains([].accessKey, `mirage`)"
    check_nakou: "[?status==`success`] | contains([].accessKey, `nakou`)"
    check_tom: "[?status==`success`] | contains([].accessKey, `tom`)"

- name: Manage each MinIO user
  block:
    - name: Create MinIO users if missing for {{ ansible_hostname }}
      ansible.builtin.command:
        cmd: /usr/local/bin/mc admin user add {{ ansible_hostname }} {{ item.name }} {{ item.password }}
      become: true
      become_user: deerhide-operator
      changed_when: false
      when: item.present is false
      loop: "{{ svc_minio_users }}"

    - name: Encrypt file with credentials # noqa: command-instead-of-shell
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -eo pipefail
          echo {{ item.password }} | gpg --trust-model always -e --armor -r {{ item.gpg_userid }}
      become: true
      become_user: deerhide-operator
      changed_when: false
      when: item.present is false
      with_items: "{{ svc_minio_users }}"
      register: gpg_encrypt_results

  rescue:
    - name: Remove MinIO users if an error occurred
      ansible.builtin.command:
        cmd: /usr/local/bin/mc admin user remove {{ ansible_hostname }} {{ item.name }}
      become: true
      become_user: deerhide-operator
      changed_when: true
      with_items: "{{ svc_minio_users }}"
      register: removed_minio_users

- name: Send encrypted file to each users with slack
  community.general.slack:
    token: "{{ slack_token }}"
    channel: "@{{ item.item.userid }}"
    username: "{{ ansible_hostname }}_Minio_Ansible"
    blocks:
      - type: section
        text:
          type: mrkdwn
          text: |-
            -----Minio credentials for {{ item.item.name }}-----
            ```
            {{ item.stdout }}
            ```
  when: item.item.present is false
  with_items: "{{ gpg_encrypt_results.results }}"
  failed_when: (removed_minio_users is defined) and (removed_minio_users.stdout|int == 1)

- name: Remove credential file
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: rm /tmp/minio_ID_*
  register: remove_tmp_minio_file
  changed_when: false
  failed_when: remove_tmp_minio_file == ""
  become: true

- name: Add consoleAdmin policy for each user
  ansible.builtin.command:
    cmd: /usr/local/bin/mc admin policy attach -u {{ item.name }} {{ ansible_hostname }} consoleAdmin
  become: true
  become_user: deerhide-operator
  changed_when: false
  with_items: "{{ svc_minio_users }}"
